{"remainingRequest":"/home/manoel/Documents/help-me-corona/helpmecorona/front/node_modules/babel-loader/lib/index.js!/home/manoel/Documents/help-me-corona/helpmecorona/front/node_modules/eslint-loader/index.js??ref--13-0!/home/manoel/Documents/help-me-corona/helpmecorona/front/src/store/modules/user.store.js","dependencies":[{"path":"/home/manoel/Documents/help-me-corona/helpmecorona/front/src/store/modules/user.store.js","mtime":1585926365000},{"path":"/home/manoel/Documents/help-me-corona/helpmecorona/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/manoel/Documents/help-me-corona/helpmecorona/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/manoel/Documents/help-me-corona/helpmecorona/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CgovKiBlc2xpbnQtZGlzYWJsZSBuby1zaGFkb3cgKi8KaW1wb3J0IHJvdXRlcyBmcm9tICcuLi8uLi9yb3V0ZXIvaW5kZXgnOwppbXBvcnQgYXBpIGZyb20gJy4uL2FwaSc7CnZhciBzdGF0ZSA9IHsKICB1c2VyOiBudWxsLAogIHRva2VuOiAnJywKICBsaXN0OiBudWxsLAogIGxvZ2luRXJyb3I6IG51bGwsCiAgbG9hZGluZzogZmFsc2UKfTsKdmFyIGdldHRlcnMgPSB7CiAgZ2V0VXNlcjogZnVuY3Rpb24gZ2V0VXNlcihzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnVzZXI7CiAgfSwKICBnZXRUb2tlbjogZnVuY3Rpb24gZ2V0VG9rZW4oc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS50b2tlbjsKICB9LAogIGdldExpc3Q6IGZ1bmN0aW9uIGdldExpc3Qoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5saXN0OwogIH0sCiAgZ2V0TG9naW5FcnJvcjogZnVuY3Rpb24gZ2V0TG9naW5FcnJvcihzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmxvZ2luRXJyb3I7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBsb2dpbjogZnVuY3Rpb24gbG9naW4oX3JlZiwgZGF0YSkgewogICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgY29tbWl0KCdTRVRfTE9BRElORycsIHRydWUpOwogICAgcmV0dXJuIGFwaSgpLnBvc3QoJ2FwcC9sb2dpbi8nLCBkYXRhKS50aGVuKGZ1bmN0aW9uIChzdWNjZXNzKSB7CiAgICAgIHZhciB1c2VySW5mbyA9IHN1Y2Nlc3MuZGF0YTsKICAgICAgdmFyIGV4cERhdGUgPSBEYXRlLm5vdygpOyAvLyB4cGQgc3RhbmRzIGZvciBleHBpcmF0aW9uIERhdGUKCiAgICAgIE9iamVjdC5hc3NpZ24odXNlckluZm8sIHsKICAgICAgICB4cGQ6IGV4cERhdGUKICAgICAgfSk7CiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VySW5mbycsIEpTT04uc3RyaW5naWZ5KHVzZXJJbmZvKSk7CiAgICAgIGNvbW1pdCgnU0VUX1RPS0VOJywgc3VjY2Vzcyk7CiAgICAgIGNvbW1pdCgnU0VUX0xPR0lOX0VSUk9SJywgbnVsbCk7CiAgICAgIGNvbW1pdCgnU0VUX0xPQURJTkcnLCBmYWxzZSk7IC8vICByZWRpcmVjdCB0byBwYWdlCgogICAgICByb3V0ZXMucmVwbGFjZSgnL2xpc3QtaGVscCcpOyAvLyByZXR1cm4gYXBpKCkuZ2V0KCd1c2Vycz9wYWdlPTEnKS50aGVuKChzdWNjZXNzKSA9PiB7CiAgICAgIC8vICAgY29tbWl0KCdTRVRfTElTVCcsIHN1Y2Nlc3MuZGF0YS5kYXRhKTsKICAgICAgLy8gfSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgY29tbWl0KCdTRVRfTE9HSU5fRVJST1InLCBlcnJvci5yZXNwb25zZS5kYXRhLmVycm9yKTsKICAgICAgY29tbWl0KCdTRVRfTE9BRElORycsIGZhbHNlKTsKICAgIH0pOwogIH0sCiAgcmVnaXN0ZXI6IGZ1bmN0aW9uIHJlZ2lzdGVyKF9yZWYyLCBkYXRhKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgY29tbWl0KCdTRVRfTE9BRElORycsIHRydWUpOwogICAgcmV0dXJuIGFwaSgpLnBvc3QoJ3JlZ2lzdGVyLycsIGRhdGEpLnRoZW4oZnVuY3Rpb24gKHN1Y2Nlc3MpIHsKICAgICAgY29uc29sZS5sb2coc3VjY2Vzcyk7CiAgICAgIGNvbW1pdCgnU0VUX1RPS0VOJywgc3VjY2Vzcyk7CiAgICAgIGNvbW1pdCgnU0VUX0xPR0lOX0VSUk9SJywgbnVsbCk7CiAgICAgIGNvbW1pdCgnU0VUX0xPQURJTkcnLCBmYWxzZSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgY29tbWl0KCdTRVRfTE9HSU5fRVJST1InLCBlcnJvci5yZXNwb25zZS5kYXRhLmVycm9yKTsKICAgICAgY29tbWl0KCdTRVRfTE9BRElORycsIGZhbHNlKTsKICAgIH0pOwogIH0sCiAgZ2V0Q3VycmVudFVzZXI6IGZ1bmN0aW9uIGdldEN1cnJlbnRVc2VyKF9yZWYzKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgY29tbWl0KCdTRVRfTE9BRElORycsIGZhbHNlKTsKICAgIHZhciBpc1ZhbGlkYXRlZCA9IGZhbHNlOwogICAgdmFyIHVzZXJJbmZvID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJJbmZvJyk7CgogICAgaWYgKHVzZXJJbmZvICYmIERhdGUubm93KCkgLSBKU09OLnBhcnNlKHVzZXJJbmZvKS54cGQgPD0gOTAwMDAwKSB7CiAgICAgIGNvbnNvbGUubG9nKCd1c2VyIHZhbGlkYXRlZCcpOwogICAgICBpc1ZhbGlkYXRlZCA9IHRydWU7CiAgICB9IGVsc2UgewogICAgICBhcGkoKS5nZXQoJ2FwcC91c2VyL2N1cnJlbnQvJykudGhlbihmdW5jdGlvbiAoc3VjY2VzcykgewogICAgICAgIHZhciB1c2VySW5mbyA9IHN1Y2Nlc3MuZGF0YTsKICAgICAgICB2YXIgZXhwRGF0ZSA9IERhdGUubm93KCk7IC8vIHhwZCBzdGFuZHMgZm9yIGV4cGlyYXRpb24gRGF0ZQoKICAgICAgICBPYmplY3QuYXNzaWduKHVzZXJJbmZvLCB7CiAgICAgICAgICB4cGQ6IGV4cERhdGUKICAgICAgICB9KTsKICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlckluZm8nLCBKU09OLnN0cmluZ2lmeSh1c2VySW5mbykpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb21taXQoJ1NFVF9MT0dJTl9FUlJPUicsIGVycm9yLnJlc3BvbnNlLmRhdGEuZXJyb3IpOwogICAgICAgIHJvdXRlcy5yZXBsYWNlKCcvbG9naW4nKTsKICAgICAgfSk7CiAgICAgIGlzVmFsaWRhdGVkID0gdHJ1ZTsKICAgIH0KCiAgICByZXR1cm4gaXNWYWxpZGF0ZWQ7CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIFNFVF9VU0VSOiBmdW5jdGlvbiBTRVRfVVNFUihzdGF0ZSwgdmFsdWUpIHsKICAgIHN0YXRlLnVzZXIgPSB2YWx1ZTsgLy8gY29uc29sZS5sb2coJ211dGF0aW9ucyBTRVRfVVNFUicsIHN0YXRlLmRhdGEpOwogIH0sCiAgU0VUX1RPS0VOOiBmdW5jdGlvbiBTRVRfVE9LRU4oc3RhdGUsIHZhbHVlKSB7CiAgICBzdGF0ZS50b2tlbiA9IHZhbHVlOwogIH0sCiAgU0VUX0xJU1Q6IGZ1bmN0aW9uIFNFVF9MSVNUKHN0YXRlLCB2YWx1ZSkgewogICAgc3RhdGUubGlzdCA9IHZhbHVlOwogIH0sCiAgU0VUX0xPR0lOX0VSUk9SOiBmdW5jdGlvbiBTRVRfTE9HSU5fRVJST1Ioc3RhdGUsIHZhbHVlKSB7CiAgICBzdGF0ZS5sb2dpbkVycm9yID0gdmFsdWU7CiAgfSwKICBTRVRfTE9BRElORzogZnVuY3Rpb24gU0VUX0xPQURJTkcoc3RhdGUsIHZhbHVlKSB7CiAgICBzdGF0ZS5sb2FkaW5nID0gdmFsdWU7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["/home/manoel/Documents/help-me-corona/helpmecorona/front/src/store/modules/user.store.js"],"names":["routes","api","state","user","token","list","loginError","loading","getters","getUser","getToken","getList","getLoginError","actions","login","data","commit","post","then","success","userInfo","expDate","Date","now","Object","assign","xpd","localStorage","setItem","JSON","stringify","replace","catch","error","response","register","console","log","getCurrentUser","isValidated","getItem","parse","get","mutations","SET_USER","value","SET_TOKEN","SET_LIST","SET_LOGIN_ERROR","SET_LOADING","namespaced"],"mappings":"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","sourcesContent":["/* eslint-disable no-shadow */\nimport routes from '../../router/index';\nimport api from '../api';\n\n\nconst state = {\n  user: null,\n  token: '',\n  list: null,\n  loginError: null,\n  loading: false,\n};\n\nconst getters = {\n  getUser(state) { return state.user; },\n  getToken(state) { return state.token; },\n  getList(state) { return state.list; },\n  getLoginError(state) { return state.loginError; },\n};\n\nconst actions = {\n  login({ commit }, data) {\n    commit('SET_LOADING', true);\n    return api().post('app/login/', data).then((success) => {\n      const userInfo = success.data;\n      const expDate = Date.now();\n      // xpd stands for expiration Date\n      Object.assign(userInfo, { xpd: expDate });\n      localStorage.setItem('userInfo', JSON.stringify(userInfo));\n      commit('SET_TOKEN', success);\n      commit('SET_LOGIN_ERROR', null);\n      commit('SET_LOADING', false);\n      //  redirect to page\n      routes.replace('/list-help');\n      // return api().get('users?page=1').then((success) => {\n      //   commit('SET_LIST', success.data.data);\n      // });\n    }).catch((error) => {\n      commit('SET_LOGIN_ERROR', error.response.data.error);\n      commit('SET_LOADING', false);\n    });\n  },\n  register({ commit }, data) {\n    commit('SET_LOADING', true);\n    return api().post('register/', data).then((success) => {\n      console.log(success);\n      commit('SET_TOKEN', success);\n      commit('SET_LOGIN_ERROR', null);\n      commit('SET_LOADING', false);\n    }).catch((error) => {\n      commit('SET_LOGIN_ERROR', error.response.data.error);\n      commit('SET_LOADING', false);\n    });\n  },\n  getCurrentUser({ commit }) {\n    commit('SET_LOADING', false);\n    let isValidated = false;\n    const userInfo = localStorage.getItem('userInfo');\n    if (userInfo && (Date.now() - JSON.parse(userInfo).xpd) <= 900000) {\n      console.log('user validated');\n      isValidated = true;\n    } else {\n      api().get('app/user/current/').then((success) => {\n        const userInfo = success.data;\n        const expDate = Date.now();\n        // xpd stands for expiration Date\n        Object.assign(userInfo, { xpd: expDate });\n        localStorage.setItem('userInfo', JSON.stringify(userInfo));\n      }).catch((error) => {\n        commit('SET_LOGIN_ERROR', error.response.data.error);\n        routes.replace('/login');\n      });\n      isValidated = true;\n    }\n    return isValidated;\n  },\n};\n\nconst mutations = {\n  SET_USER(state, value) {\n    state.user = value;\n    // console.log('mutations SET_USER', state.data);\n  },\n  SET_TOKEN(state, value) {\n    state.token = value;\n  },\n  SET_LIST(state, value) {\n    state.list = value;\n  },\n  SET_LOGIN_ERROR(state, value) {\n    state.loginError = value;\n  },\n  SET_LOADING(state, value) {\n    state.loading = value;\n  },\n};\n\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]}]}